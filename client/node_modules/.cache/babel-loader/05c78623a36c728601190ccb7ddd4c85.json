{"ast":null,"code":"var _jsxFileName = \"/Users/bestbrobradley/Desktop/code/audiofile/src/pages/search.js\";\nimport React, { useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext';\nimport PrimaryDeets from '../components/PrimaryDeets';\nimport SecondaryDeets from '../components/SecondaryDeets';\nimport TitleSearch from '../components/TitleSearch';\n\nfunction Search() {\n  const {\n    search,\n    setSearch\n  } = useState({\n    title: \"\",\n    artist: \"\",\n    genre: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSearch({ ...search,\n      [name]: value\n    });\n  };\n\n  const {\n    userState\n  } = useContext(UserContext);\n  const {\n    options\n  } = userState;\n  const main = [];\n  const additional = [];\n\n  for (const item in options) {\n    if (options[item] === true) {\n      main.push(item);\n    } else {\n      additional.push(item);\n    }\n  }\n\n  console.log(search);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Album Search\"), /*#__PURE__*/React.createElement(TitleSearch, {\n    search: search,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryDeets, {\n    items: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SecondaryDeets, {\n    items: additional,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/bestbrobradley/Desktop/code/audiofile/src/pages/search.js"],"names":["React","useContext","useState","UserContext","PrimaryDeets","SecondaryDeets","TitleSearch","Search","search","setSearch","title","artist","genre","handleChange","event","name","value","target","userState","options","main","additional","item","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,SAASC,MAAT,GAAkB;AAElB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBP,QAAQ,CAAC;AACrCQ,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,MAAM,EAAE,EAF6B;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAAtC;;AAMA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAR,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAY,OAACO,IAAD,GAAOC;AAAnB,KAAD,CAAT;AACH,GAHD;;AAKA,QAAM;AAAEE,IAAAA;AAAF,MAAgBjB,UAAU,CAACE,WAAD,CAAhC;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAcD,SAApB;AACA,QAAME,IAAI,GAAG,EAAb;AACA,QAAMC,UAAU,GAAG,EAAnB;;AAEA,OAAK,MAAMC,IAAX,IAAmBH,OAAnB,EAA4B;AACxB,QAAIA,OAAO,CAACG,IAAD,CAAP,KAAkB,IAAtB,EAA4B;AACxBF,MAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACH,KAFD,MAEO;AACLD,MAAAA,UAAU,CAACE,IAAX,CAAgBD,IAAhB;AACD;AACJ;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AAEI,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAA6B,IAAA,YAAY,EAAEK,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEO,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAed,MAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport UserContext from '../utils/UserContext'\nimport PrimaryDeets from '../components/PrimaryDeets'\nimport SecondaryDeets from '../components/SecondaryDeets'\nimport TitleSearch from '../components/TitleSearch'\n\nfunction Search() {\n\nconst { search, setSearch } = useState({\n  title: \"\",\n  artist: \"\",\n  genre: \"\"\n})\n\nconst handleChange = (event) => {\n    const { name, value } = event.target\n    setSearch({...search, [name]:value})\n}\n\nconst { userState } = useContext(UserContext)\n\nconst { options } = userState\nconst main = []\nconst additional = []\n\nfor (const item in options) {\n    if (options[item] === true) {\n        main.push(item)\n    } else {\n      additional.push(item)\n    }\n}\n\nconsole.log(search)\n\n    return (\n      <div>\n        <header>\n            Album Search\n        </header>\n        <TitleSearch search={search} handleChange={handleChange}/>\n        <PrimaryDeets items={main}/>\n        <SecondaryDeets items={additional}/>\n      </div>\n    );\n  }\n  \n  export default Search;"]},"metadata":{},"sourceType":"module"}