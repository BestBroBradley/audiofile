{"ast":null,"code":"var _jsxFileName = \"/Users/bestbrobradley/Desktop/code/audiofile/src/components/NewAcct.js\";\nimport React, { useState, useContext } from 'react';\nimport AcctContext from '../utils/AcctContext';\nimport UserContext from '../utils/UserContext';\nimport ScreenOne from \"./ScreenOne\";\nimport ScreenTwo from \"./ScreenTwo\";\n\nfunction NewAcct() {\n  const [userDetails, setDetails] = useState({\n    username: \"\",\n    password: \"\",\n    confirm: \"\",\n    title: true,\n    artist: true,\n    genre: true,\n    tracks: false,\n    date: false,\n    condition: false,\n    comments: false,\n    rating: false,\n    albumlength: false,\n    composer: false,\n    rarity: false,\n    price: false\n  });\n  const [state, setState] = useState({\n    current: 0\n  });\n  const {\n    userState,\n    setUser\n  } = useContext(UserContext);\n  const {\n    username,\n    password,\n    confirm\n  } = userDetails;\n\n  const next = () => {\n    if (username !== \"\" && password !== \"\" && confirm !== \"\" && password === confirm) {\n      let current = state.current;\n      current += 1;\n\n      if (current === 3) {\n        current = 0;\n      }\n\n      setState({ ...state,\n        \"current\": current\n      });\n    } else if (username === \"\") {\n      alert(\"Username cannot be blank\");\n    } else if (password === \"\" || confirm === \"\") {\n      alert(\"Password areas cannot be left blank.\");\n    } else if (password !== confirm) {\n      alert(\"Password and confirmation do not match.\");\n    }\n  };\n\n  const back = () => {\n    let current = state.current;\n    current -= 1;\n\n    if (current === -1) {\n      current = 2;\n    }\n\n    setState({ ...state,\n      \"current\": current\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    console.log(name);\n    console.log(value);\n    setDetails({ ...userDetails,\n      [name]: value\n    });\n  };\n\n  const handleCheck = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(value);\n\n    if (userDetails[name]) {\n      setDetails({ ...userDetails,\n        [name]: false\n      });\n      console.log(\"Hit true\");\n    } else {\n      setDetails({ ...userDetails,\n        [name]: true\n      });\n      console.log(\"Hit false\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newUser = {\n      userDetails\n    };\n    setUser({ ...userState,\n      options: userDetails\n    });\n    console.log(userState);\n    alert(\"Submitted!\");\n  };\n\n  const displayScreen = () => {\n    switch (state.current) {\n      case 0:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }, \"We're happy you're here!\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"interior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ScreenOne, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: next,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, \"Next\"));\n\n      case 1:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"interior\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ScreenTwo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: back,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }, \"Submit\"));\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AcctContext.Provider, {\n    value: {\n      userDetails,\n      setDetails,\n      handleCheck,\n      handleChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, displayScreen()));\n}\n\nexport default NewAcct;","map":{"version":3,"sources":["/Users/bestbrobradley/Desktop/code/audiofile/src/components/NewAcct.js"],"names":["React","useState","useContext","AcctContext","UserContext","ScreenOne","ScreenTwo","NewAcct","userDetails","setDetails","username","password","confirm","title","artist","genre","tracks","date","condition","comments","rating","albumlength","composer","rarity","price","state","setState","current","userState","setUser","next","alert","back","handleChange","event","value","name","target","console","log","handleCheck","handleSubmit","preventDefault","newUser","options","displayScreen"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport AcctContext from '../utils/AcctContext'\nimport UserContext from '../utils/UserContext'\nimport ScreenOne from \"./ScreenOne\"\nimport ScreenTwo from \"./ScreenTwo\"\n\nfunction NewAcct() {\n\n    const [userDetails, setDetails] = useState({\n        username: \"\",\n        password: \"\",\n        confirm: \"\",\n        title: true,\n        artist: true,\n        genre: true,\n        tracks: false,\n        date: false,\n        condition: false,\n        comments: false,\n        rating: false,\n        albumlength: false,\n        composer: false,\n        rarity: false,\n        price: false\n    })\n\n    const [state, setState] = useState({\n        current: 0\n    })\n\n    const { userState, setUser } = useContext(UserContext)\n\n    const {username, password, confirm } = userDetails\n\n    const next = () => {\n        if (username !== \"\" && password !== \"\" && confirm !== \"\" && password === confirm) {\n            let current = state.current\n            current += 1\n            if (current === 3) {\n                current = 0\n            }\n            setState({ ...state, \"current\": current })\n        } else if (username === \"\") {\n            alert(\"Username cannot be blank\")\n        } else if (password === \"\" || confirm === \"\")  {\n            alert(\"Password areas cannot be left blank.\")            \n        } else if (password !== confirm) {\n            alert(\"Password and confirmation do not match.\")\n        }\n    }\n\n    const back = () => {\n        let current = state.current\n        current -= 1\n        if (current === -1) {\n            current = 2\n        }\n        setState({ ...state, \"current\": current })\n    }\n\n    const handleChange = (event) => {\n        const { value, name } = event.target\n        console.log(name)\n        console.log(value)\n        setDetails({ ...userDetails, [name]: value })\n    }\n\n    const handleCheck = (event) => {\n        const { name, value } = event.target\n        console.log(value)\n        if (userDetails[name]) {\n            setDetails({ ...userDetails, [name]: false })\n            console.log(\"Hit true\")\n        } else {\n            setDetails({ ...userDetails, [name]: true })\n            console.log(\"Hit false\")\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newUser = {userDetails, }\n        setUser({...userState, options: userDetails})\n        console.log(userState)\n        alert(\"Submitted!\")\n    }\n\n    const displayScreen = () => {\n        switch (state.current) {\n            case 0:\n                return (\n                    <>\n                        <h1>We're happy you're here!</h1>\n                        <div className=\"interior\">\n                            <ScreenOne />\n                        </div>\n                        <button onClick={next}>Next</button>\n                    </>\n                );\n\n            case 1:\n                return (\n                    <>\n                        <div className=\"interior\">\n                            <ScreenTwo />\n                        </div>\n                        <button onClick={back}>Back</button>\n                        <button onClick={handleSubmit}>Submit</button>\n                    </>\n                );\n            default:\n                break;\n        }\n    }\n\n    return (\n        <AcctContext.Provider value={{ userDetails, setDetails, handleCheck, handleChange }}>\n            <div className=\"carousel\">\n                {displayScreen()}\n            </div>\n        </AcctContext.Provider>\n    )\n}\n\nexport default NewAcct"]},"metadata":{},"sourceType":"module"}